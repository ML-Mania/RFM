{
  "creationTimeStamp": "2024-10-30T13:04:55.047Z",
  "modifiedTimeStamp": "2024-10-30T13:04:56.166Z",
  "createdBy": "sukilb",
  "modifiedBy": "sukilb",
  "links": [
    {
      "method": "GET",
      "rel": "self",
      "href": "/transfer/packages/58e1a234-26d6-49ea-9a2f-fd311ccccb86",
      "uri": "/transfer/packages/58e1a234-26d6-49ea-9a2f-fd311ccccb86",
      "type": "application/vnd.sas.transfer.package"
    },
    {
      "method": "GET",
      "rel": "alternate",
      "href": "/transfer/packages/58e1a234-26d6-49ea-9a2f-fd311ccccb86",
      "uri": "/transfer/packages/58e1a234-26d6-49ea-9a2f-fd311ccccb86",
      "type": "application/vnd.sas.transfer.package.summary"
    },
    {
      "method": "DELETE",
      "rel": "delete",
      "href": "/transfer/packages/58e1a234-26d6-49ea-9a2f-fd311ccccb86",
      "uri": "/transfer/packages/58e1a234-26d6-49ea-9a2f-fd311ccccb86"
    },
    {
      "method": "GET",
      "rel": "objects",
      "href": "/transfer/packages/58e1a234-26d6-49ea-9a2f-fd311ccccb86/objects",
      "uri": "/transfer/packages/58e1a234-26d6-49ea-9a2f-fd311ccccb86/objects",
      "type": "application/vnd.sas.collection"
    },
    {
      "method": "GET",
      "rel": "connectors",
      "href": "/transfer/packages/58e1a234-26d6-49ea-9a2f-fd311ccccb86/connectors",
      "uri": "/transfer/packages/58e1a234-26d6-49ea-9a2f-fd311ccccb86/connectors",
      "type": "application/vnd.sas.collection"
    },
    {
      "method": "GET",
      "rel": "mapping",
      "href": "/transfer/packages/58e1a234-26d6-49ea-9a2f-fd311ccccb86/mapping",
      "uri": "/transfer/packages/58e1a234-26d6-49ea-9a2f-fd311ccccb86/mapping",
      "type": "application/vnd.sas.transfer.import.mapping"
    }
  ],
  "version": 1,
  "id": "58e1a234-26d6-49ea-9a2f-fd311ccccb86",
  "name": "RFMb",
  "description": "",
  "options": {
    "includeDependencies": "true",
    "includeRules": "true"
  },
  "requestedItems": [
    "/dataFlows/steps/1d34ac88-e300-42bc-887d-0ae689799b67"
  ],
  "transferObjectCount": 4,
  "transferDetails": [
    {
      "transferObject": {
        "links": [
          {
            "method": "GET",
            "rel": "self",
            "href": "/transfer/packages/58e1a234-26d6-49ea-9a2f-fd311ccccb86/objects/4286de4a-96c8-4bcc-bb55-97469319f5cc",
            "uri": "/transfer/packages/58e1a234-26d6-49ea-9a2f-fd311ccccb86/objects/4286de4a-96c8-4bcc-bb55-97469319f5cc",
            "type": "application/vnd.sas.transfer.object"
          }
        ],
        "version": 2,
        "id": "4286de4a-96c8-4bcc-bb55-97469319f5cc",
        "summary": {
          "creationTimeStamp": "2023-10-20T14:47:05.308Z",
          "modifiedTimeStamp": "2023-10-20T14:47:25.583Z",
          "createdBy": "swepaa",
          "modifiedBy": "swepaa",
          "id": "1d34ac88-e300-42bc-887d-0ae689799b67",
          "type": "flowStep",
          "name": "Recency_ Frequency_ and Monet from EG.step",
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/dataFlows/steps/1d34ac88-e300-42bc-887d-0ae689799b67",
              "uri": "/dataFlows/steps/1d34ac88-e300-42bc-887d-0ae689799b67",
              "type": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "GET",
              "rel": "alternate",
              "href": "/dataFlows/steps/1d34ac88-e300-42bc-887d-0ae689799b67",
              "uri": "/dataFlows/steps/1d34ac88-e300-42bc-887d-0ae689799b67",
              "type": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "up",
              "href": "/dataFlows/steps",
              "uri": "/dataFlows/steps",
              "type": "application/vnd.sas.collection",
              "itemType": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "PUT",
              "rel": "update",
              "href": "/dataFlows/steps/1d34ac88-e300-42bc-887d-0ae689799b67",
              "uri": "/dataFlows/steps/1d34ac88-e300-42bc-887d-0ae689799b67",
              "type": "application/vnd.sas.data.flow.step",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "DELETE",
              "rel": "delete",
              "href": "/dataFlows/steps/1d34ac88-e300-42bc-887d-0ae689799b67",
              "uri": "/dataFlows/steps/1d34ac88-e300-42bc-887d-0ae689799b67"
            },
            {
              "method": "POST",
              "rel": "copy",
              "href": "/dataFlows/steps/1d34ac88-e300-42bc-887d-0ae689799b67/copy",
              "uri": "/dataFlows/steps/1d34ac88-e300-42bc-887d-0ae689799b67/copy",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "transferExport",
              "href": "/dataFlows/steps/1d34ac88-e300-42bc-887d-0ae689799b67",
              "uri": "/dataFlows/steps/1d34ac88-e300-42bc-887d-0ae689799b67",
              "responseType": "application/vnd.sas.transfer.object"
            },
            {
              "method": "PUT",
              "rel": "transferImportUpdate",
              "href": "/dataFlows/steps/1d34ac88-e300-42bc-887d-0ae689799b67",
              "uri": "/dataFlows/steps/1d34ac88-e300-42bc-887d-0ae689799b67",
              "type": "application/vnd.sas.transfer.object",
              "responseType": "application/vnd.sas.summary"
            }
          ],
          "version": 2
        },
        "content": "",
        "state": "enabled",
        "contentSourceLocation": "/Users/sukilb/My Folder",
        "connectors": [],
        "substitutions": {}
      },
      "connectors": [
        {
          "id": "da91efea-19f8-40c4-be44-f797045be745",
          "uri": "/folders/folders/354526a4-596a-4eb5-b51d-60f2ccd3bb67",
          "relatedUris": [
            "/dataFlows/steps/1d34ac88-e300-42bc-887d-0ae689799b67"
          ],
          "name": "My Folder",
          "contentType": "application/vnd.sas.content.folder+json",
          "type": "parentFolder",
          "hints": {},
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/transfer/packages/58e1a234-26d6-49ea-9a2f-fd311ccccb86/connectors/da91efea-19f8-40c4-be44-f797045be745",
              "uri": "/transfer/packages/58e1a234-26d6-49ea-9a2f-fd311ccccb86/connectors/da91efea-19f8-40c4-be44-f797045be745",
              "type": "application/vnd.sas.transfer.connector"
            }
          ],
          "forceMapping": false
        }
      ]
    },
    {
      "transferObject": {
        "links": [
          {
            "method": "GET",
            "rel": "self",
            "href": "/transfer/packages/58e1a234-26d6-49ea-9a2f-fd311ccccb86/objects/a52bc1f9-32ad-4dc3-9e28-1a8c11d36ce0",
            "uri": "/transfer/packages/58e1a234-26d6-49ea-9a2f-fd311ccccb86/objects/a52bc1f9-32ad-4dc3-9e28-1a8c11d36ce0",
            "type": "application/vnd.sas.transfer.object"
          }
        ],
        "version": 2,
        "id": "a52bc1f9-32ad-4dc3-9e28-1a8c11d36ce0",
        "summary": {
          "creationTimeStamp": "2021-03-23T09:06:21.385Z",
          "modifiedTimeStamp": "2021-03-23T09:06:21.385Z",
          "createdBy": "sukilb",
          "modifiedBy": "sukilb",
          "id": "354526a4-596a-4eb5-b51d-60f2ccd3bb67",
          "type": "folder",
          "name": "My Folder",
          "description": "My Folder for sukilb",
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/folders/folders/354526a4-596a-4eb5-b51d-60f2ccd3bb67",
              "uri": "/folders/folders/354526a4-596a-4eb5-b51d-60f2ccd3bb67",
              "type": "application/vnd.sas.content.folder"
            },
            {
              "method": "DELETE",
              "rel": "delete",
              "href": "/folders/folders/354526a4-596a-4eb5-b51d-60f2ccd3bb67",
              "uri": "/folders/folders/354526a4-596a-4eb5-b51d-60f2ccd3bb67"
            },
            {
              "method": "DELETE",
              "rel": "deleteRecursively",
              "href": "/folders/folders/354526a4-596a-4eb5-b51d-60f2ccd3bb67?recursive=true",
              "uri": "/folders/folders/354526a4-596a-4eb5-b51d-60f2ccd3bb67?recursive=true"
            },
            {
              "method": "GET",
              "rel": "members",
              "href": "/folders/folders/354526a4-596a-4eb5-b51d-60f2ccd3bb67/members",
              "uri": "/folders/folders/354526a4-596a-4eb5-b51d-60f2ccd3bb67/members",
              "type": "application/vnd.sas.collection",
              "itemType": "application/vnd.sas.content.folder"
            },
            {
              "method": "POST",
              "rel": "addMember",
              "href": "/folders/folders/354526a4-596a-4eb5-b51d-60f2ccd3bb67/members",
              "uri": "/folders/folders/354526a4-596a-4eb5-b51d-60f2ccd3bb67/members",
              "type": "application/vnd.sas.content.folder.member",
              "responseType": "application/vnd.sas.content.folder.member"
            },
            {
              "method": "GET",
              "rel": "up",
              "href": "/folders/folders/57371526-c30c-4008-9b56-eb7324e908b3",
              "uri": "/folders/folders/57371526-c30c-4008-9b56-eb7324e908b3",
              "type": "application/vnd.sas.content.folder"
            },
            {
              "method": "GET",
              "rel": "ancestors",
              "href": "/folders/ancestors?childUri=/folders/folders/354526a4-596a-4eb5-b51d-60f2ccd3bb67",
              "uri": "/folders/ancestors?childUri=/folders/folders/354526a4-596a-4eb5-b51d-60f2ccd3bb67",
              "type": "application/vnd.sas.content.folder.ancestor"
            },
            {
              "method": "POST",
              "rel": "createChild",
              "href": "/folders/folders?parentFolderUri=/folders/folders/354526a4-596a-4eb5-b51d-60f2ccd3bb67",
              "uri": "/folders/folders?parentFolderUri=/folders/folders/354526a4-596a-4eb5-b51d-60f2ccd3bb67",
              "type": "application/vnd.sas.content.folder"
            },
            {
              "method": "PUT",
              "rel": "validateNewMemberName",
              "href": "/folders/commons/validations/folders/354526a4-596a-4eb5-b51d-60f2ccd3bb67/members/@new/name?value={newname}&type={newtype}",
              "uri": "/folders/commons/validations/folders/354526a4-596a-4eb5-b51d-60f2ccd3bb67/members/@new/name?value={newname}&type={newtype}",
              "type": "application/vnd.sas.validation"
            },
            {
              "method": "GET",
              "rel": "transferExport",
              "href": "/folders/folders/354526a4-596a-4eb5-b51d-60f2ccd3bb67",
              "uri": "/folders/folders/354526a4-596a-4eb5-b51d-60f2ccd3bb67",
              "responseType": "application/vnd.sas.transfer.object"
            },
            {
              "method": "PUT",
              "rel": "transferImportUpdate",
              "href": "/folders/folders/354526a4-596a-4eb5-b51d-60f2ccd3bb67",
              "uri": "/folders/folders/354526a4-596a-4eb5-b51d-60f2ccd3bb67",
              "type": "application/vnd.sas.transfer.object",
              "responseType": "application/vnd.sas.summary"
            },
            {
              "method": "POST",
              "rel": "transferImport",
              "href": "/folders/folders",
              "uri": "/folders/folders",
              "type": "application/vnd.sas.transfer.object",
              "responseType": "application/vnd.sas.summary"
            }
          ],
          "version": 2
        },
        "content": "eyJmb2xkZXIiOnsiY3JlYXRpb25UaW1lU3RhbXAiOiIyMDIxLTAzLTIzVDA5OjA2OjIxLjM4NTQ3N1oiLCJjcmVhdGVkQnkiOiJzdWtpbGIiLCJtb2RpZmllZFRpbWVTdGFtcCI6IjIwMjEtMDMtMjNUMDk6MDY6MjEuMzg1NDc4WiIsIm1vZGlmaWVkQnkiOiJzdWtpbGIiLCJ2ZXJzaW9uIjoxLCJpZCI6IjM1NDUyNmE0LTU5NmEtNGViNS1iNTFkLTYwZjJjY2QzYmI2NyIsIm5hbWUiOiJNeSBGb2xkZXIiLCJwYXJlbnRGb2xkZXJVcmkiOiIvZm9sZGVycy9mb2xkZXJzLzU3MzcxNTI2LWMzMGMtNDAwOC05YjU2LWViNzMyNGU5MDhiMyIsImRlc2NyaXB0aW9uIjoiTXkgRm9sZGVyIGZvciBzdWtpbGIiLCJ0eXBlIjoibXlGb2xkZXIiLCJtZW1iZXJDb3VudCI6MTMsInByb3BlcnRpZXMiOnsiYWxsb3dNb3ZlIjoiZmFsc2UifSwibGlua3MiOlt7Im1ldGhvZCI6IkdFVCIsInJlbCI6InNlbGYiLCJocmVmIjoiL2ZvbGRlcnMvZm9sZGVycy8zNTQ1MjZhNC01OTZhLTRlYjUtYjUxZC02MGYyY2NkM2JiNjciLCJ1cmkiOiIvZm9sZGVycy9mb2xkZXJzLzM1NDUyNmE0LTU5NmEtNGViNS1iNTFkLTYwZjJjY2QzYmI2NyIsInR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLmNvbnRlbnQuZm9sZGVyIn0seyJtZXRob2QiOiJERUxFVEUiLCJyZWwiOiJkZWxldGUiLCJocmVmIjoiL2ZvbGRlcnMvZm9sZGVycy8zNTQ1MjZhNC01OTZhLTRlYjUtYjUxZC02MGYyY2NkM2JiNjciLCJ1cmkiOiIvZm9sZGVycy9mb2xkZXJzLzM1NDUyNmE0LTU5NmEtNGViNS1iNTFkLTYwZjJjY2QzYmI2NyJ9LHsibWV0aG9kIjoiREVMRVRFIiwicmVsIjoiZGVsZXRlUmVjdXJzaXZlbHkiLCJocmVmIjoiL2ZvbGRlcnMvZm9sZGVycy8zNTQ1MjZhNC01OTZhLTRlYjUtYjUxZC02MGYyY2NkM2JiNjc/cmVjdXJzaXZlPXRydWUiLCJ1cmkiOiIvZm9sZGVycy9mb2xkZXJzLzM1NDUyNmE0LTU5NmEtNGViNS1iNTFkLTYwZjJjY2QzYmI2Nz9yZWN1cnNpdmU9dHJ1ZSJ9LHsibWV0aG9kIjoiR0VUIiwicmVsIjoibWVtYmVycyIsImhyZWYiOiIvZm9sZGVycy9mb2xkZXJzLzM1NDUyNmE0LTU5NmEtNGViNS1iNTFkLTYwZjJjY2QzYmI2Ny9tZW1iZXJzIiwidXJpIjoiL2ZvbGRlcnMvZm9sZGVycy8zNTQ1MjZhNC01OTZhLTRlYjUtYjUxZC02MGYyY2NkM2JiNjcvbWVtYmVycyIsInR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLmNvbGxlY3Rpb24iLCJpdGVtVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMuY29udGVudC5mb2xkZXIifSx7Im1ldGhvZCI6IlBPU1QiLCJyZWwiOiJhZGRNZW1iZXIiLCJocmVmIjoiL2ZvbGRlcnMvZm9sZGVycy8zNTQ1MjZhNC01OTZhLTRlYjUtYjUxZC02MGYyY2NkM2JiNjcvbWVtYmVycyIsInVyaSI6Ii9mb2xkZXJzL2ZvbGRlcnMvMzU0NTI2YTQtNTk2YS00ZWI1LWI1MWQtNjBmMmNjZDNiYjY3L21lbWJlcnMiLCJ0eXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy5jb250ZW50LmZvbGRlci5tZW1iZXIiLCJyZXNwb25zZVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLmNvbnRlbnQuZm9sZGVyLm1lbWJlciJ9LHsibWV0aG9kIjoiR0VUIiwicmVsIjoidXAiLCJocmVmIjoiL2ZvbGRlcnMvZm9sZGVycy81NzM3MTUyNi1jMzBjLTQwMDgtOWI1Ni1lYjczMjRlOTA4YjMiLCJ1cmkiOiIvZm9sZGVycy9mb2xkZXJzLzU3MzcxNTI2LWMzMGMtNDAwOC05YjU2LWViNzMyNGU5MDhiMyIsInR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLmNvbnRlbnQuZm9sZGVyIn0seyJtZXRob2QiOiJHRVQiLCJyZWwiOiJhbmNlc3RvcnMiLCJocmVmIjoiL2ZvbGRlcnMvYW5jZXN0b3JzP2NoaWxkVXJpPS9mb2xkZXJzL2ZvbGRlcnMvMzU0NTI2YTQtNTk2YS00ZWI1LWI1MWQtNjBmMmNjZDNiYjY3IiwidXJpIjoiL2ZvbGRlcnMvYW5jZXN0b3JzP2NoaWxkVXJpPS9mb2xkZXJzL2ZvbGRlcnMvMzU0NTI2YTQtNTk2YS00ZWI1LWI1MWQtNjBmMmNjZDNiYjY3IiwidHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMuY29udGVudC5mb2xkZXIuYW5jZXN0b3IifSx7Im1ldGhvZCI6IlBPU1QiLCJyZWwiOiJjcmVhdGVDaGlsZCIsImhyZWYiOiIvZm9sZGVycy9mb2xkZXJzP3BhcmVudEZvbGRlclVyaT0vZm9sZGVycy9mb2xkZXJzLzM1NDUyNmE0LTU5NmEtNGViNS1iNTFkLTYwZjJjY2QzYmI2NyIsInVyaSI6Ii9mb2xkZXJzL2ZvbGRlcnM/cGFyZW50Rm9sZGVyVXJpPS9mb2xkZXJzL2ZvbGRlcnMvMzU0NTI2YTQtNTk2YS00ZWI1LWI1MWQtNjBmMmNjZDNiYjY3IiwidHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMuY29udGVudC5mb2xkZXIifSx7Im1ldGhvZCI6IlBVVCIsInJlbCI6InZhbGlkYXRlTmV3TWVtYmVyTmFtZSIsImhyZWYiOiIvZm9sZGVycy9jb21tb25zL3ZhbGlkYXRpb25zL2ZvbGRlcnMvMzU0NTI2YTQtNTk2YS00ZWI1LWI1MWQtNjBmMmNjZDNiYjY3L21lbWJlcnMvQG5ldy9uYW1lP3ZhbHVlPXtuZXduYW1lfVx1MDAyNnR5cGU9e25ld3R5cGV9IiwidXJpIjoiL2ZvbGRlcnMvY29tbW9ucy92YWxpZGF0aW9ucy9mb2xkZXJzLzM1NDUyNmE0LTU5NmEtNGViNS1iNTFkLTYwZjJjY2QzYmI2Ny9tZW1iZXJzL0BuZXcvbmFtZT92YWx1ZT17bmV3bmFtZX1cdTAwMjZ0eXBlPXtuZXd0eXBlfSIsInR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLnZhbGlkYXRpb24ifSx7Im1ldGhvZCI6IkdFVCIsInJlbCI6InRyYW5zZmVyRXhwb3J0IiwiaHJlZiI6Ii9mb2xkZXJzL2ZvbGRlcnMvMzU0NTI2YTQtNTk2YS00ZWI1LWI1MWQtNjBmMmNjZDNiYjY3IiwidXJpIjoiL2ZvbGRlcnMvZm9sZGVycy8zNTQ1MjZhNC01OTZhLTRlYjUtYjUxZC02MGYyY2NkM2JiNjciLCJyZXNwb25zZVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLnRyYW5zZmVyLm9iamVjdCJ9LHsibWV0aG9kIjoiUFVUIiwicmVsIjoidHJhbnNmZXJJbXBvcnRVcGRhdGUiLCJocmVmIjoiL2ZvbGRlcnMvZm9sZGVycy8zNTQ1MjZhNC01OTZhLTRlYjUtYjUxZC02MGYyY2NkM2JiNjciLCJ1cmkiOiIvZm9sZGVycy9mb2xkZXJzLzM1NDUyNmE0LTU5NmEtNGViNS1iNTFkLTYwZjJjY2QzYmI2NyIsInR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLnRyYW5zZmVyLm9iamVjdCIsInJlc3BvbnNlVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMuc3VtbWFyeSJ9LHsibWV0aG9kIjoiUE9TVCIsInJlbCI6InRyYW5zZmVySW1wb3J0IiwiaHJlZiI6Ii9mb2xkZXJzL2ZvbGRlcnMiLCJ1cmkiOiIvZm9sZGVycy9mb2xkZXJzIiwidHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMudHJhbnNmZXIub2JqZWN0IiwicmVzcG9uc2VUeXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy5zdW1tYXJ5In1dfSwidXNlck5hbWUiOiJzdWtpbGIifQ==",
        "state": "enabled",
        "connectors": [],
        "substitutions": {}
      },
      "connectors": [
        {
          "id": "571fe5d8-ffd5-4241-99b3-b204d31d9fcd",
          "uri": "/folders/folders/57371526-c30c-4008-9b56-eb7324e908b3",
          "relatedUris": [
            "/folders/folders/354526a4-596a-4eb5-b51d-60f2ccd3bb67"
          ],
          "name": "sukilb",
          "contentType": "application/vnd.sas.content.folder+json",
          "type": "parentFolder",
          "hints": {},
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/transfer/packages/58e1a234-26d6-49ea-9a2f-fd311ccccb86/connectors/571fe5d8-ffd5-4241-99b3-b204d31d9fcd",
              "uri": "/transfer/packages/58e1a234-26d6-49ea-9a2f-fd311ccccb86/connectors/571fe5d8-ffd5-4241-99b3-b204d31d9fcd",
              "type": "application/vnd.sas.transfer.connector"
            }
          ],
          "forceMapping": false
        }
      ]
    },
    {
      "transferObject": {
        "links": [
          {
            "method": "GET",
            "rel": "self",
            "href": "/transfer/packages/58e1a234-26d6-49ea-9a2f-fd311ccccb86/objects/cfe07258-2f84-4872-ae30-d8db0a9afc8a",
            "uri": "/transfer/packages/58e1a234-26d6-49ea-9a2f-fd311ccccb86/objects/cfe07258-2f84-4872-ae30-d8db0a9afc8a",
            "type": "application/vnd.sas.transfer.object"
          }
        ],
        "version": 2,
        "id": "cfe07258-2f84-4872-ae30-d8db0a9afc8a",
        "summary": {
          "creationTimeStamp": "2021-03-23T09:06:20.336Z",
          "modifiedTimeStamp": "2021-03-23T09:06:20.336Z",
          "createdBy": "sukilb",
          "modifiedBy": "sukilb",
          "id": "57371526-c30c-4008-9b56-eb7324e908b3",
          "type": "folder",
          "name": "sukilb",
          "description": "The user folder for sukilb",
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/folders/folders/57371526-c30c-4008-9b56-eb7324e908b3",
              "uri": "/folders/folders/57371526-c30c-4008-9b56-eb7324e908b3",
              "type": "application/vnd.sas.content.folder"
            },
            {
              "method": "DELETE",
              "rel": "delete",
              "href": "/folders/folders/57371526-c30c-4008-9b56-eb7324e908b3",
              "uri": "/folders/folders/57371526-c30c-4008-9b56-eb7324e908b3"
            },
            {
              "method": "DELETE",
              "rel": "deleteRecursively",
              "href": "/folders/folders/57371526-c30c-4008-9b56-eb7324e908b3?recursive=true",
              "uri": "/folders/folders/57371526-c30c-4008-9b56-eb7324e908b3?recursive=true"
            },
            {
              "method": "GET",
              "rel": "members",
              "href": "/folders/folders/57371526-c30c-4008-9b56-eb7324e908b3/members",
              "uri": "/folders/folders/57371526-c30c-4008-9b56-eb7324e908b3/members",
              "type": "application/vnd.sas.collection",
              "itemType": "application/vnd.sas.content.folder"
            },
            {
              "method": "POST",
              "rel": "addMember",
              "href": "/folders/folders/57371526-c30c-4008-9b56-eb7324e908b3/members",
              "uri": "/folders/folders/57371526-c30c-4008-9b56-eb7324e908b3/members",
              "type": "application/vnd.sas.content.folder.member",
              "responseType": "application/vnd.sas.content.folder.member"
            },
            {
              "method": "GET",
              "rel": "up",
              "href": "/folders/folders/fdcaf0e0-5e77-4a29-a453-7f2faf8f9e13",
              "uri": "/folders/folders/fdcaf0e0-5e77-4a29-a453-7f2faf8f9e13",
              "type": "application/vnd.sas.content.folder"
            },
            {
              "method": "GET",
              "rel": "ancestors",
              "href": "/folders/ancestors?childUri=/folders/folders/57371526-c30c-4008-9b56-eb7324e908b3",
              "uri": "/folders/ancestors?childUri=/folders/folders/57371526-c30c-4008-9b56-eb7324e908b3",
              "type": "application/vnd.sas.content.folder.ancestor"
            },
            {
              "method": "POST",
              "rel": "createChild",
              "href": "/folders/folders?parentFolderUri=/folders/folders/57371526-c30c-4008-9b56-eb7324e908b3",
              "uri": "/folders/folders?parentFolderUri=/folders/folders/57371526-c30c-4008-9b56-eb7324e908b3",
              "type": "application/vnd.sas.content.folder"
            },
            {
              "method": "PUT",
              "rel": "validateNewMemberName",
              "href": "/folders/commons/validations/folders/57371526-c30c-4008-9b56-eb7324e908b3/members/@new/name?value={newname}&type={newtype}",
              "uri": "/folders/commons/validations/folders/57371526-c30c-4008-9b56-eb7324e908b3/members/@new/name?value={newname}&type={newtype}",
              "type": "application/vnd.sas.validation"
            },
            {
              "method": "GET",
              "rel": "transferExport",
              "href": "/folders/folders/57371526-c30c-4008-9b56-eb7324e908b3",
              "uri": "/folders/folders/57371526-c30c-4008-9b56-eb7324e908b3",
              "responseType": "application/vnd.sas.transfer.object"
            },
            {
              "method": "PUT",
              "rel": "transferImportUpdate",
              "href": "/folders/folders/57371526-c30c-4008-9b56-eb7324e908b3",
              "uri": "/folders/folders/57371526-c30c-4008-9b56-eb7324e908b3",
              "type": "application/vnd.sas.transfer.object",
              "responseType": "application/vnd.sas.summary"
            },
            {
              "method": "POST",
              "rel": "transferImport",
              "href": "/folders/folders",
              "uri": "/folders/folders",
              "type": "application/vnd.sas.transfer.object",
              "responseType": "application/vnd.sas.summary"
            }
          ],
          "version": 2
        },
        "content": "eyJmb2xkZXIiOnsiY3JlYXRpb25UaW1lU3RhbXAiOiIyMDIxLTAzLTIzVDA5OjA2OjIwLjMzNjA1MloiLCJjcmVhdGVkQnkiOiJzdWtpbGIiLCJtb2RpZmllZFRpbWVTdGFtcCI6IjIwMjEtMDMtMjNUMDk6MDY6MjAuMzM2MDUzWiIsIm1vZGlmaWVkQnkiOiJzdWtpbGIiLCJ2ZXJzaW9uIjoxLCJpZCI6IjU3MzcxNTI2LWMzMGMtNDAwOC05YjU2LWViNzMyNGU5MDhiMyIsIm5hbWUiOiJzdWtpbGIiLCJwYXJlbnRGb2xkZXJVcmkiOiIvZm9sZGVycy9mb2xkZXJzL2ZkY2FmMGUwLTVlNzctNGEyOS1hNDUzLTdmMmZhZjhmOWUxMyIsImRlc2NyaXB0aW9uIjoiVGhlIHVzZXIgZm9sZGVyIGZvciBzdWtpbGIiLCJ0eXBlIjoidXNlckZvbGRlciIsIm1lbWJlckNvdW50Ijo1LCJwcm9wZXJ0aWVzIjp7ImFsbG93TW92ZSI6ImZhbHNlIiwiaGlkZGVuIjoidHJ1ZSJ9LCJsaW5rcyI6W3sibWV0aG9kIjoiR0VUIiwicmVsIjoic2VsZiIsImhyZWYiOiIvZm9sZGVycy9mb2xkZXJzLzU3MzcxNTI2LWMzMGMtNDAwOC05YjU2LWViNzMyNGU5MDhiMyIsInVyaSI6Ii9mb2xkZXJzL2ZvbGRlcnMvNTczNzE1MjYtYzMwYy00MDA4LTliNTYtZWI3MzI0ZTkwOGIzIiwidHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMuY29udGVudC5mb2xkZXIifSx7Im1ldGhvZCI6IkRFTEVURSIsInJlbCI6ImRlbGV0ZSIsImhyZWYiOiIvZm9sZGVycy9mb2xkZXJzLzU3MzcxNTI2LWMzMGMtNDAwOC05YjU2LWViNzMyNGU5MDhiMyIsInVyaSI6Ii9mb2xkZXJzL2ZvbGRlcnMvNTczNzE1MjYtYzMwYy00MDA4LTliNTYtZWI3MzI0ZTkwOGIzIn0seyJtZXRob2QiOiJERUxFVEUiLCJyZWwiOiJkZWxldGVSZWN1cnNpdmVseSIsImhyZWYiOiIvZm9sZGVycy9mb2xkZXJzLzU3MzcxNTI2LWMzMGMtNDAwOC05YjU2LWViNzMyNGU5MDhiMz9yZWN1cnNpdmU9dHJ1ZSIsInVyaSI6Ii9mb2xkZXJzL2ZvbGRlcnMvNTczNzE1MjYtYzMwYy00MDA4LTliNTYtZWI3MzI0ZTkwOGIzP3JlY3Vyc2l2ZT10cnVlIn0seyJtZXRob2QiOiJHRVQiLCJyZWwiOiJtZW1iZXJzIiwiaHJlZiI6Ii9mb2xkZXJzL2ZvbGRlcnMvNTczNzE1MjYtYzMwYy00MDA4LTliNTYtZWI3MzI0ZTkwOGIzL21lbWJlcnMiLCJ1cmkiOiIvZm9sZGVycy9mb2xkZXJzLzU3MzcxNTI2LWMzMGMtNDAwOC05YjU2LWViNzMyNGU5MDhiMy9tZW1iZXJzIiwidHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMuY29sbGVjdGlvbiIsIml0ZW1UeXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy5jb250ZW50LmZvbGRlciJ9LHsibWV0aG9kIjoiUE9TVCIsInJlbCI6ImFkZE1lbWJlciIsImhyZWYiOiIvZm9sZGVycy9mb2xkZXJzLzU3MzcxNTI2LWMzMGMtNDAwOC05YjU2LWViNzMyNGU5MDhiMy9tZW1iZXJzIiwidXJpIjoiL2ZvbGRlcnMvZm9sZGVycy81NzM3MTUyNi1jMzBjLTQwMDgtOWI1Ni1lYjczMjRlOTA4YjMvbWVtYmVycyIsInR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLmNvbnRlbnQuZm9sZGVyLm1lbWJlciIsInJlc3BvbnNlVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMuY29udGVudC5mb2xkZXIubWVtYmVyIn0seyJtZXRob2QiOiJHRVQiLCJyZWwiOiJ1cCIsImhyZWYiOiIvZm9sZGVycy9mb2xkZXJzL2ZkY2FmMGUwLTVlNzctNGEyOS1hNDUzLTdmMmZhZjhmOWUxMyIsInVyaSI6Ii9mb2xkZXJzL2ZvbGRlcnMvZmRjYWYwZTAtNWU3Ny00YTI5LWE0NTMtN2YyZmFmOGY5ZTEzIiwidHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMuY29udGVudC5mb2xkZXIifSx7Im1ldGhvZCI6IkdFVCIsInJlbCI6ImFuY2VzdG9ycyIsImhyZWYiOiIvZm9sZGVycy9hbmNlc3RvcnM/Y2hpbGRVcmk9L2ZvbGRlcnMvZm9sZGVycy81NzM3MTUyNi1jMzBjLTQwMDgtOWI1Ni1lYjczMjRlOTA4YjMiLCJ1cmkiOiIvZm9sZGVycy9hbmNlc3RvcnM/Y2hpbGRVcmk9L2ZvbGRlcnMvZm9sZGVycy81NzM3MTUyNi1jMzBjLTQwMDgtOWI1Ni1lYjczMjRlOTA4YjMiLCJ0eXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy5jb250ZW50LmZvbGRlci5hbmNlc3RvciJ9LHsibWV0aG9kIjoiUE9TVCIsInJlbCI6ImNyZWF0ZUNoaWxkIiwiaHJlZiI6Ii9mb2xkZXJzL2ZvbGRlcnM/cGFyZW50Rm9sZGVyVXJpPS9mb2xkZXJzL2ZvbGRlcnMvNTczNzE1MjYtYzMwYy00MDA4LTliNTYtZWI3MzI0ZTkwOGIzIiwidXJpIjoiL2ZvbGRlcnMvZm9sZGVycz9wYXJlbnRGb2xkZXJVcmk9L2ZvbGRlcnMvZm9sZGVycy81NzM3MTUyNi1jMzBjLTQwMDgtOWI1Ni1lYjczMjRlOTA4YjMiLCJ0eXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy5jb250ZW50LmZvbGRlciJ9LHsibWV0aG9kIjoiUFVUIiwicmVsIjoidmFsaWRhdGVOZXdNZW1iZXJOYW1lIiwiaHJlZiI6Ii9mb2xkZXJzL2NvbW1vbnMvdmFsaWRhdGlvbnMvZm9sZGVycy81NzM3MTUyNi1jMzBjLTQwMDgtOWI1Ni1lYjczMjRlOTA4YjMvbWVtYmVycy9AbmV3L25hbWU/dmFsdWU9e25ld25hbWV9XHUwMDI2dHlwZT17bmV3dHlwZX0iLCJ1cmkiOiIvZm9sZGVycy9jb21tb25zL3ZhbGlkYXRpb25zL2ZvbGRlcnMvNTczNzE1MjYtYzMwYy00MDA4LTliNTYtZWI3MzI0ZTkwOGIzL21lbWJlcnMvQG5ldy9uYW1lP3ZhbHVlPXtuZXduYW1lfVx1MDAyNnR5cGU9e25ld3R5cGV9IiwidHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMudmFsaWRhdGlvbiJ9LHsibWV0aG9kIjoiR0VUIiwicmVsIjoidHJhbnNmZXJFeHBvcnQiLCJocmVmIjoiL2ZvbGRlcnMvZm9sZGVycy81NzM3MTUyNi1jMzBjLTQwMDgtOWI1Ni1lYjczMjRlOTA4YjMiLCJ1cmkiOiIvZm9sZGVycy9mb2xkZXJzLzU3MzcxNTI2LWMzMGMtNDAwOC05YjU2LWViNzMyNGU5MDhiMyIsInJlc3BvbnNlVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMudHJhbnNmZXIub2JqZWN0In0seyJtZXRob2QiOiJQVVQiLCJyZWwiOiJ0cmFuc2ZlckltcG9ydFVwZGF0ZSIsImhyZWYiOiIvZm9sZGVycy9mb2xkZXJzLzU3MzcxNTI2LWMzMGMtNDAwOC05YjU2LWViNzMyNGU5MDhiMyIsInVyaSI6Ii9mb2xkZXJzL2ZvbGRlcnMvNTczNzE1MjYtYzMwYy00MDA4LTliNTYtZWI3MzI0ZTkwOGIzIiwidHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMudHJhbnNmZXIub2JqZWN0IiwicmVzcG9uc2VUeXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy5zdW1tYXJ5In0seyJtZXRob2QiOiJQT1NUIiwicmVsIjoidHJhbnNmZXJJbXBvcnQiLCJocmVmIjoiL2ZvbGRlcnMvZm9sZGVycyIsInVyaSI6Ii9mb2xkZXJzL2ZvbGRlcnMiLCJ0eXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy50cmFuc2Zlci5vYmplY3QiLCJyZXNwb25zZVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLnN1bW1hcnkifV19LCJ1c2VyTmFtZSI6InN1a2lsYiJ9",
        "state": "enabled",
        "connectors": [],
        "substitutions": {}
      },
      "connectors": [
        {
          "id": "cb606c83-2ab5-4b2f-a58c-b5e63c7cac5d",
          "uri": "/folders/folders/fdcaf0e0-5e77-4a29-a453-7f2faf8f9e13",
          "relatedUris": [
            "/folders/folders/57371526-c30c-4008-9b56-eb7324e908b3"
          ],
          "name": "Users",
          "contentType": "application/vnd.sas.content.folder+json",
          "type": "parentFolder",
          "hints": {},
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/transfer/packages/58e1a234-26d6-49ea-9a2f-fd311ccccb86/connectors/cb606c83-2ab5-4b2f-a58c-b5e63c7cac5d",
              "uri": "/transfer/packages/58e1a234-26d6-49ea-9a2f-fd311ccccb86/connectors/cb606c83-2ab5-4b2f-a58c-b5e63c7cac5d",
              "type": "application/vnd.sas.transfer.connector"
            }
          ],
          "forceMapping": false
        }
      ]
    },
    {
      "transferObject": {
        "links": [
          {
            "method": "GET",
            "rel": "self",
            "href": "/transfer/packages/58e1a234-26d6-49ea-9a2f-fd311ccccb86/objects/9b539ac8-104f-459a-9fcf-6dd063ce8b4d",
            "uri": "/transfer/packages/58e1a234-26d6-49ea-9a2f-fd311ccccb86/objects/9b539ac8-104f-459a-9fcf-6dd063ce8b4d",
            "type": "application/vnd.sas.transfer.object"
          }
        ],
        "version": 2,
        "id": "9b539ac8-104f-459a-9fcf-6dd063ce8b4d",
        "summary": {
          "creationTimeStamp": "2021-03-07T23:32:40.160Z",
          "modifiedTimeStamp": "2021-03-07T23:32:40.160Z",
          "createdBy": "anonymous",
          "modifiedBy": "anonymous",
          "id": "fdcaf0e0-5e77-4a29-a453-7f2faf8f9e13",
          "type": "folder",
          "name": "Users",
          "description": "Base Folder for all user folders.",
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/folders/folders/fdcaf0e0-5e77-4a29-a453-7f2faf8f9e13",
              "uri": "/folders/folders/fdcaf0e0-5e77-4a29-a453-7f2faf8f9e13",
              "type": "application/vnd.sas.content.folder"
            },
            {
              "method": "DELETE",
              "rel": "delete",
              "href": "/folders/folders/fdcaf0e0-5e77-4a29-a453-7f2faf8f9e13",
              "uri": "/folders/folders/fdcaf0e0-5e77-4a29-a453-7f2faf8f9e13"
            },
            {
              "method": "DELETE",
              "rel": "deleteRecursively",
              "href": "/folders/folders/fdcaf0e0-5e77-4a29-a453-7f2faf8f9e13?recursive=true",
              "uri": "/folders/folders/fdcaf0e0-5e77-4a29-a453-7f2faf8f9e13?recursive=true"
            },
            {
              "method": "GET",
              "rel": "members",
              "href": "/folders/folders/fdcaf0e0-5e77-4a29-a453-7f2faf8f9e13/members",
              "uri": "/folders/folders/fdcaf0e0-5e77-4a29-a453-7f2faf8f9e13/members",
              "type": "application/vnd.sas.collection",
              "itemType": "application/vnd.sas.content.folder"
            },
            {
              "method": "POST",
              "rel": "addMember",
              "href": "/folders/folders/fdcaf0e0-5e77-4a29-a453-7f2faf8f9e13/members",
              "uri": "/folders/folders/fdcaf0e0-5e77-4a29-a453-7f2faf8f9e13/members",
              "type": "application/vnd.sas.content.folder.member",
              "responseType": "application/vnd.sas.content.folder.member"
            },
            {
              "method": "GET",
              "rel": "ancestors",
              "href": "/folders/ancestors?childUri=/folders/folders/fdcaf0e0-5e77-4a29-a453-7f2faf8f9e13",
              "uri": "/folders/ancestors?childUri=/folders/folders/fdcaf0e0-5e77-4a29-a453-7f2faf8f9e13",
              "type": "application/vnd.sas.content.folder.ancestor"
            },
            {
              "method": "POST",
              "rel": "createChild",
              "href": "/folders/folders?parentFolderUri=/folders/folders/fdcaf0e0-5e77-4a29-a453-7f2faf8f9e13",
              "uri": "/folders/folders?parentFolderUri=/folders/folders/fdcaf0e0-5e77-4a29-a453-7f2faf8f9e13",
              "type": "application/vnd.sas.content.folder"
            },
            {
              "method": "PUT",
              "rel": "validateNewMemberName",
              "href": "/folders/commons/validations/folders/fdcaf0e0-5e77-4a29-a453-7f2faf8f9e13/members/@new/name?value={newname}&type={newtype}",
              "uri": "/folders/commons/validations/folders/fdcaf0e0-5e77-4a29-a453-7f2faf8f9e13/members/@new/name?value={newname}&type={newtype}",
              "type": "application/vnd.sas.validation"
            },
            {
              "method": "GET",
              "rel": "transferExport",
              "href": "/folders/folders/fdcaf0e0-5e77-4a29-a453-7f2faf8f9e13",
              "uri": "/folders/folders/fdcaf0e0-5e77-4a29-a453-7f2faf8f9e13",
              "responseType": "application/vnd.sas.transfer.object"
            },
            {
              "method": "PUT",
              "rel": "transferImportUpdate",
              "href": "/folders/folders/fdcaf0e0-5e77-4a29-a453-7f2faf8f9e13",
              "uri": "/folders/folders/fdcaf0e0-5e77-4a29-a453-7f2faf8f9e13",
              "type": "application/vnd.sas.transfer.object",
              "responseType": "application/vnd.sas.summary"
            },
            {
              "method": "POST",
              "rel": "transferImport",
              "href": "/folders/folders",
              "uri": "/folders/folders",
              "type": "application/vnd.sas.transfer.object",
              "responseType": "application/vnd.sas.summary"
            }
          ],
          "version": 2
        },
        "content": "eyJmb2xkZXIiOnsiY3JlYXRpb25UaW1lU3RhbXAiOiIyMDIxLTAzLTA3VDIzOjMyOjQwLjE2MDQ0MloiLCJjcmVhdGVkQnkiOiJhbm9ueW1vdXMiLCJtb2RpZmllZFRpbWVTdGFtcCI6IjIwMjEtMDMtMDdUMjM6MzI6NDAuMTYwNDQzWiIsIm1vZGlmaWVkQnkiOiJhbm9ueW1vdXMiLCJ2ZXJzaW9uIjoxLCJpZCI6ImZkY2FmMGUwLTVlNzctNGEyOS1hNDUzLTdmMmZhZjhmOWUxMyIsIm5hbWUiOiJVc2VycyIsImRlc2NyaXB0aW9uIjoiQmFzZSBGb2xkZXIgZm9yIGFsbCB1c2VyIGZvbGRlcnMuIiwidHlwZSI6InVzZXJSb290IiwibWVtYmVyQ291bnQiOjExOSwicHJvcGVydGllcyI6eyJhbGxvd01vdmUiOiJmYWxzZSIsInV1aWQiOiJlOTExNjk3ZS1mZTUzLTQ5N2MtYTI3Yy05MDljNzU3YmEwNGEifSwibGlua3MiOlt7Im1ldGhvZCI6IkdFVCIsInJlbCI6InNlbGYiLCJocmVmIjoiL2ZvbGRlcnMvZm9sZGVycy9mZGNhZjBlMC01ZTc3LTRhMjktYTQ1My03ZjJmYWY4ZjllMTMiLCJ1cmkiOiIvZm9sZGVycy9mb2xkZXJzL2ZkY2FmMGUwLTVlNzctNGEyOS1hNDUzLTdmMmZhZjhmOWUxMyIsInR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLmNvbnRlbnQuZm9sZGVyIn0seyJtZXRob2QiOiJERUxFVEUiLCJyZWwiOiJkZWxldGUiLCJocmVmIjoiL2ZvbGRlcnMvZm9sZGVycy9mZGNhZjBlMC01ZTc3LTRhMjktYTQ1My03ZjJmYWY4ZjllMTMiLCJ1cmkiOiIvZm9sZGVycy9mb2xkZXJzL2ZkY2FmMGUwLTVlNzctNGEyOS1hNDUzLTdmMmZhZjhmOWUxMyJ9LHsibWV0aG9kIjoiREVMRVRFIiwicmVsIjoiZGVsZXRlUmVjdXJzaXZlbHkiLCJocmVmIjoiL2ZvbGRlcnMvZm9sZGVycy9mZGNhZjBlMC01ZTc3LTRhMjktYTQ1My03ZjJmYWY4ZjllMTM/cmVjdXJzaXZlPXRydWUiLCJ1cmkiOiIvZm9sZGVycy9mb2xkZXJzL2ZkY2FmMGUwLTVlNzctNGEyOS1hNDUzLTdmMmZhZjhmOWUxMz9yZWN1cnNpdmU9dHJ1ZSJ9LHsibWV0aG9kIjoiR0VUIiwicmVsIjoibWVtYmVycyIsImhyZWYiOiIvZm9sZGVycy9mb2xkZXJzL2ZkY2FmMGUwLTVlNzctNGEyOS1hNDUzLTdmMmZhZjhmOWUxMy9tZW1iZXJzIiwidXJpIjoiL2ZvbGRlcnMvZm9sZGVycy9mZGNhZjBlMC01ZTc3LTRhMjktYTQ1My03ZjJmYWY4ZjllMTMvbWVtYmVycyIsInR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLmNvbGxlY3Rpb24iLCJpdGVtVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMuY29udGVudC5mb2xkZXIifSx7Im1ldGhvZCI6IlBPU1QiLCJyZWwiOiJhZGRNZW1iZXIiLCJocmVmIjoiL2ZvbGRlcnMvZm9sZGVycy9mZGNhZjBlMC01ZTc3LTRhMjktYTQ1My03ZjJmYWY4ZjllMTMvbWVtYmVycyIsInVyaSI6Ii9mb2xkZXJzL2ZvbGRlcnMvZmRjYWYwZTAtNWU3Ny00YTI5LWE0NTMtN2YyZmFmOGY5ZTEzL21lbWJlcnMiLCJ0eXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy5jb250ZW50LmZvbGRlci5tZW1iZXIiLCJyZXNwb25zZVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLmNvbnRlbnQuZm9sZGVyLm1lbWJlciJ9LHsibWV0aG9kIjoiR0VUIiwicmVsIjoiYW5jZXN0b3JzIiwiaHJlZiI6Ii9mb2xkZXJzL2FuY2VzdG9ycz9jaGlsZFVyaT0vZm9sZGVycy9mb2xkZXJzL2ZkY2FmMGUwLTVlNzctNGEyOS1hNDUzLTdmMmZhZjhmOWUxMyIsInVyaSI6Ii9mb2xkZXJzL2FuY2VzdG9ycz9jaGlsZFVyaT0vZm9sZGVycy9mb2xkZXJzL2ZkY2FmMGUwLTVlNzctNGEyOS1hNDUzLTdmMmZhZjhmOWUxMyIsInR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLmNvbnRlbnQuZm9sZGVyLmFuY2VzdG9yIn0seyJtZXRob2QiOiJQT1NUIiwicmVsIjoiY3JlYXRlQ2hpbGQiLCJocmVmIjoiL2ZvbGRlcnMvZm9sZGVycz9wYXJlbnRGb2xkZXJVcmk9L2ZvbGRlcnMvZm9sZGVycy9mZGNhZjBlMC01ZTc3LTRhMjktYTQ1My03ZjJmYWY4ZjllMTMiLCJ1cmkiOiIvZm9sZGVycy9mb2xkZXJzP3BhcmVudEZvbGRlclVyaT0vZm9sZGVycy9mb2xkZXJzL2ZkY2FmMGUwLTVlNzctNGEyOS1hNDUzLTdmMmZhZjhmOWUxMyIsInR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLmNvbnRlbnQuZm9sZGVyIn0seyJtZXRob2QiOiJQVVQiLCJyZWwiOiJ2YWxpZGF0ZU5ld01lbWJlck5hbWUiLCJocmVmIjoiL2ZvbGRlcnMvY29tbW9ucy92YWxpZGF0aW9ucy9mb2xkZXJzL2ZkY2FmMGUwLTVlNzctNGEyOS1hNDUzLTdmMmZhZjhmOWUxMy9tZW1iZXJzL0BuZXcvbmFtZT92YWx1ZT17bmV3bmFtZX1cdTAwMjZ0eXBlPXtuZXd0eXBlfSIsInVyaSI6Ii9mb2xkZXJzL2NvbW1vbnMvdmFsaWRhdGlvbnMvZm9sZGVycy9mZGNhZjBlMC01ZTc3LTRhMjktYTQ1My03ZjJmYWY4ZjllMTMvbWVtYmVycy9AbmV3L25hbWU/dmFsdWU9e25ld25hbWV9XHUwMDI2dHlwZT17bmV3dHlwZX0iLCJ0eXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy52YWxpZGF0aW9uIn0seyJtZXRob2QiOiJHRVQiLCJyZWwiOiJ0cmFuc2ZlckV4cG9ydCIsImhyZWYiOiIvZm9sZGVycy9mb2xkZXJzL2ZkY2FmMGUwLTVlNzctNGEyOS1hNDUzLTdmMmZhZjhmOWUxMyIsInVyaSI6Ii9mb2xkZXJzL2ZvbGRlcnMvZmRjYWYwZTAtNWU3Ny00YTI5LWE0NTMtN2YyZmFmOGY5ZTEzIiwicmVzcG9uc2VUeXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy50cmFuc2Zlci5vYmplY3QifSx7Im1ldGhvZCI6IlBVVCIsInJlbCI6InRyYW5zZmVySW1wb3J0VXBkYXRlIiwiaHJlZiI6Ii9mb2xkZXJzL2ZvbGRlcnMvZmRjYWYwZTAtNWU3Ny00YTI5LWE0NTMtN2YyZmFmOGY5ZTEzIiwidXJpIjoiL2ZvbGRlcnMvZm9sZGVycy9mZGNhZjBlMC01ZTc3LTRhMjktYTQ1My03ZjJmYWY4ZjllMTMiLCJ0eXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy50cmFuc2Zlci5vYmplY3QiLCJyZXNwb25zZVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLnN1bW1hcnkifSx7Im1ldGhvZCI6IlBPU1QiLCJyZWwiOiJ0cmFuc2ZlckltcG9ydCIsImhyZWYiOiIvZm9sZGVycy9mb2xkZXJzIiwidXJpIjoiL2ZvbGRlcnMvZm9sZGVycyIsInR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLnRyYW5zZmVyLm9iamVjdCIsInJlc3BvbnNlVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMuc3VtbWFyeSJ9XX19",
        "state": "enabled",
        "connectors": [],
        "substitutions": {}
      },
      "connectors": []
    }
  ]
}